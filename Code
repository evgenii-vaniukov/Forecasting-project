HireRate.df <-read.csv("HireRate.csv", header = T)
View(HireRate.df)
library(forecast)


# Plotting the entire ts
HireRate.ts <- ts(HireRate.df$Hire.rate, start = c(2005,1), end = c(2015,6), frequency = 12)
plot(HireRate.ts,xlab="Time",ylab="Hire Rate")

# Partitioning
Valid <- 24 
Training <- length(HireRate.ts)- Valid

train.h <- window(HireRate.ts,start=c(2005,1),end=c(2005,Training))
valid.h <- window(HireRate.ts,start=c(2005,Training+1),end=c(2005,Training+Valid))

# NaÃ¯ve Forecast with seasonality
naive.forecast <- snaive(train.h, h = Valid, level = 0)
plot(naive.forecast,xlab="Time", ylab ="Hire Rate")
lines(valid.h)
summary(naive.forecast)

Forecast method: Seasonal naive method

Model Information:
Call: snaive(y = train.h, h = Valid, level = 0) 

Residual sd: 2.7085 

Error measures:
                     ME     RMSE      MAE       MPE     MAPE MASE     ACF1
Training set -0.8888889 2.836273 2.088889 -11.02824 22.00302    1 0.709137

Forecasts:
         Point Forecast Lo 0 Hi 0
Jul 2013             15   15   15
Aug 2013             17   17   17
Sep 2013             12   12   12
Oct 2013             14   14   14
Nov 2013             10   10   10
Dec 2013              3    3    3
Jan 2014             12   12   12
Feb 2014              8    8    8
Mar 2014             10   10   10
Apr 2014             16   16   16
May 2014             17   17   17
Jun 2014             17   17   17
Jul 2014             15   15   15
Aug 2014             17   17   17
Sep 2014             12   12   12
Oct 2014             14   14   14
Nov 2014             10   10   10
Dec 2014              3    3    3
Jan 2015             12   12   12
Feb 2015              8    8    8
Mar 2015             10   10   10
Apr 2015             16   16   16
May 2015             17   17   17
Jun 2015             17   17   17




# Linear trend with seasonality
HireRate.lm <- tslm(train.h ~ trend + season)
linear.forecast <- forecast(HireRate.lm, h=Valid, level=0)

plot(linear.forecast, xlab="Time", ylab ="Hire Rate")
lines(valid.h)
summary(linear.forecast)
Forecast method: Linear regression model

Model Information:

Call:
tslm(formula = train.h ~ trend + season)

Coefficients:
(Intercept)        trend      season2      season3      season4      season5      season6      season7      season8      season9     season10     season11  
   17.76362     -0.09041     -5.02070     -0.81917      4.38235      5.02832      6.11874      4.41667      4.38208      2.22249      2.43791     -2.97168  
   season12  
   -8.88126  


Error measures:
                       ME     RMSE      MAE       MPE     MAPE      MASE      ACF1
Training set 1.235225e-16 2.474595 1.978149 -6.054011 21.76669 0.9469864 0.8333729

Forecasts:
         Point Forecast       Lo 0       Hi 0
Jul 2013     12.8676471 12.8676471 12.8676471
Aug 2013     12.7426471 12.7426471 12.7426471
Sep 2013     10.4926471 10.4926471 10.4926471
Oct 2013     10.6176471 10.6176471 10.6176471
Nov 2013      5.1176471  5.1176471  5.1176471
Dec 2013     -0.8823529 -0.8823529 -0.8823529
Jan 2014      7.9084967  7.9084967  7.9084967
Feb 2014      2.7973856  2.7973856  2.7973856
Mar 2014      6.9084967  6.9084967  6.9084967
Apr 2014     12.0196078 12.0196078 12.0196078
May 2014     12.5751634 12.5751634 12.5751634
Jun 2014     13.5751634 13.5751634 13.5751634
Jul 2014     11.7826797 11.7826797 11.7826797
Aug 2014     11.6576797 11.6576797 11.6576797
Sep 2014      9.4076797  9.4076797  9.4076797
Oct 2014      9.5326797  9.5326797  9.5326797
Nov 2014      4.0326797  4.0326797  4.0326797
Dec 2014     -1.9673203 -1.9673203 -1.9673203
Jan 2015      6.8235294  6.8235294  6.8235294
Feb 2015      1.7124183  1.7124183  1.7124183
Mar 2015      5.8235294  5.8235294  5.8235294
Apr 2015     10.9346405 10.9346405 10.9346405
May 2015     11.4901961 11.4901961 11.4901961
Jun 2015     12.4901961 12.4901961 12.4901961

# Quadratic trend with seasonality
HireRate.quad <- tslm(train.h ~ trend + I(trend^2) + season)
quadratic.forecast <- forecast(HireRate.quad, h=Valid, level=0)

plot(quadratic.forecast, xlab="Time", ylab ="Hire Rate")
lines(valid.h)
summary(quadratic.forecast)




Forecast method: Linear regression model

Model Information:

Call:
tslm(formula = train.h ~ trend + I(trend^2) + season)

Coefficients:
(Intercept)        trend   I(trend^2)      season2      season3      season4      season5      season6      season7      season8      season9     season10  
  21.494689    -0.318350     0.002213    -5.011845    -0.805894     4.395631     5.037174     6.118736     4.868113     4.842379     2.687219     2.902633  
   season11     season12  
  -2.511379    -8.429817  


Error measures:
                       ME     RMSE      MAE      MPE    MAPE      MASE      ACF1
Training set 2.338475e-18 1.797464 1.398552 -2.72295 13.4309 0.6695195 0.6862318

Forecasts:
         Point Forecast      Lo 0      Hi 0
Jul 2013      17.050166 17.050166 17.050166
Aug 2013      17.164167 17.164167 17.164167
Sep 2013      15.153168 15.153168 15.153168
Oct 2013      15.517169 15.517169 15.517169
Nov 2013      10.256170 10.256170 10.256170
Dec 2013       4.495171  4.495171  4.495171
Jan 2014      13.086853 13.086853 13.086853
Feb 2014       8.241299  8.241299  8.241299
Mar 2014      12.617967 12.617967 12.617967
Apr 2014      17.994634 17.994634 17.994634
May 2014      18.815747 18.815747 18.815747
Jun 2014      20.081303 20.081303 20.081303
Jul 2014      19.019101 19.019101 19.019101
Aug 2014      19.186213 19.186213 19.186213
Sep 2014      17.228326 17.228326 17.228326
Oct 2014      17.645438 17.645438 17.645438
Nov 2014      12.437550 12.437550 12.437550
Dec 2014       6.729663  6.729663  6.729663
Jan 2015      15.374456 15.374456 15.374456
Feb 2015      10.582013 10.582013 10.582013
Mar 2015      15.011792 15.011792 15.011792
Apr 2015      20.441572 20.441572 20.441572
May 2015      21.315795 21.315795 21.315795
Jun 2015      22.634463 22.634463 22.634463

#Forecasting the 4-month Hire Rate

HireRate.quad.full <- tslm(HireRate.ts~ trend + I(trend^2) + season)
HireRate.forecast <- forecast(HireRate.quad.full, h = 4, level = 0)

HireRate.forecast
     Point Forecast     Lo 0     Hi 0
Jul 2015       20.99703 20.99703 20.99703
Aug 2015       21.27607 21.27607 21.27607
Sep 2015       19.45512 19.45512 19.45512
Oct 2015       19.73416 19.73416 19.73416

